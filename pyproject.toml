[tool.poetry]
name = "python-fastapistarter"
version = "0.1.0"
description = "A FastAPI starter project with Poetry, Ruff, Pytest, Docker, and VSCode integration."
authors = ["Your Name <your@email.com>"]
readme = "README.md"

packages = [{ include = "python_fastapi_starter", from = "src" }]

[tool.poetry.scripts]
start = "python_fastapi_starter.cli:main"
test = "python_fastapi_starter.cli:test"
lint = "python_fastapi_starter.cli:lint_and_format"
release = "python_fastapi_starter.cli:release"
postinstall = "python_fastapi_starter.cli:postinstall"

[tool.poetry.dependencies]
python = ">=3.12,<4.0"
fastapi = { extras = ["standard"], version = "^0.116.1" }
uvicorn = { extras = ["standard"], version = "^0.35.0" }
python-dotenv = "^1.1.1"
pydantic = "^2.11.7"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
ruff = "^0.12.7"
python-semantic-release = "^10.3.1"
lefthook = "^1.12.3"
httpx = "^0.28.0"
bandit = "^1.8.6"
flake8 = "^7.3.0"
flake8-comprehensions = "^3.16.0"
setuptools = "^80.9.0"
dsp3-toolkit = "^1.0.1"

[tool.mypy]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "dsp_toolkit.*"
ignore_missing_imports = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.semantic_release]
assets = []
build_command_env = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "conventional"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = false
# repo_dir = "/home/msmall/dev/projects/github/telespazio/dsp3/python-fastapi-starter"
no_git_verify = false
tag_format = "v{version}"
version_toml = ["pyproject.toml:tool.poetry.version"]

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
# changelog_file = ""
exclude_commit_patterns = []
mode = "update"
insertion_flag = "<!-- version list -->"
template_dir = "templates"

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"
mask_initial_release = true

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = false

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
other_allowed_tags = [
    "build",
    "chore",
    "ci",
    "docs",
    "style",
    "refactor",
    "test",
]
allowed_tags = [
    "feat",
    "fix",
    "perf",
    "build",
    "chore",
    "ci",
    "docs",
    "style",
    "refactor",
    "test",
]
default_bump_level = 0
parse_squash_commits = true
ignore_merge_commits = true

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false
